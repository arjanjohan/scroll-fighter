{"noir_version":"0.27.0+606ff4448571b0cfe4b92420c766c4239a4b23a0","hash":17156810641032533628,"abi":{"parameters":[{"name":"fighterID","type":{"kind":"field"},"visibility":"private"},{"name":"moves","type":{"kind":"array","length":3,"type":{"kind":"field"}},"visibility":"private"},{"name":"secret","type":{"kind":"field"},"visibility":"private"}],"param_witnesses":{"fighterID":[{"start":0,"end":1}],"moves":[{"start":1,"end":4}],"secret":[{"start":4,"end":5}]},"return_type":null,"return_witnesses":[]},"bytecode":"H4sIAAAAAAAA/+1cjW4TRxD+HJOkaQgk0BAKBDYmFCgEbs8++9wSSoWqVmor9RFqOxe1VatUVVTeto8SNSN2rfN50wL3zcm2biRrT/ZldmZ25tv5kdLAW/rp/PObe26ef5YwTQ23vnJrVI4skVcUELcsb+sf8rZYduvK+eej3LOnot1Cdjxz3zcKdj1zz/5vmu47FN5r5J6XcvwueqdxAZ/1gJxbge8aKNArt0blyHplxaj/5JQXg5rCnk3y3nle7ajb6WS9OLNtO4ji/jBNok4y7KY2tUmaHMVpu52lnbTXH/Z7Ud922pk9TvrxseO1XJ5X2/GKVqATFEtk+zF1Xg3wGkajo8QOu0c9mw2SdDTqt62NB91Bdxinx9kwsWmSnvMcDeL0fLt4MLJZNOhmTQQcFnzwWuXxivLyCqisuueVgPz59/yZnpF9xsfaMqb951Lu95WcLA2+LDavb+hctwL2UQOrPHMWz9WC8Vh818ALTi291/hnFJSVAchrCny/gg7Qsy5KLyfTlz4m+hDTfj7xEPn28O4Z8Axc9uMsNSCuSgbss8bL+PAMuIVwBtzCdAbcyv3dRRlwC/+fAYf4zEwGLMY0hT2Kgcx0trIZ7zpRrsvQCQJ2sK6DBzhVldiMauL4LY0C4qoAzIZbr6AGGBrAiDFNYQ92Sc0EmA3wAvcKdIKADTAbmD+AaRBlDoirAjBX3bqJuodHAxgxar6HJ8Y1hT2bCnt7XmUB5yp4gbwJnaBg9/CYOm9h/np4WzxeEz28a6h7eI4Wv4cnClxT4Hsds93DE72v889IpYe36WRl8/0aOkDP7uExfekTog8x7ecTD5FvD9X18AiXfeU9vG233kBdYtMyYDGmKezB7uFtluc1zni3iXLdgE4QsIN1GzzAqarEZlQTVffwdtx6EzXA0ABGjGkKe7BLaibA7IAXuDehEwRsgNnhncV/lv5l5WwQeX3K07ldVelPlHmi9L+FuvR3tPilvzjRLQW+tzHbpb/ofZt/RpVlVEvQAWmSPYIZ1R237qIeWtAyKjFqfmghxjWFPdkZVt75ymZYd8ADil3oBAV7aMHU+S7mb2hxl8drInO5hzpzcbT4mYs40T0FvgaznbmI3oZ/RipDC38Zsfm+hg7Qs4cWhqjzHtGHmPbzicceqh1aEC77yocWvjd3H3VPkZYBizFNYQ/20GK3PK9xxtsiynUfOkHADtYWeIBTVYnNqCaqHlrsu/UBaoChAYwY0xT2YJfUTIDZBy9wH0AnCNgAs887C9WhxRKR12c8nSsbWhBlnij9H6Iu/R0tfukvTvRQge8jzHbpL3o/4p+Raq+TOQh6PON+KWfzGPzL7XNwQVPOWHgaTBL7smPG0xPiOVVVQTShE6PgyBmsIJ669QD1kI5WQYhR80M6Ma4p7MmuKPLOV7aieApeIB9gPi4ups7PMH9DumfgXjqenqPO1B0tfqYuTvRcgW+E2c7URe+If0YqQ7oDJyub7zfQAXr2kI7pS5boQ0z7+cRD5NtDdUM6wmVf+ZAu9rqj7qHTMmAxpinswR7SHZTnNc54Y6JcbegEATtYY/AAp6oSm1FNVD2k67g1QQ0wNIARY5rCHuySmgkwHfACN4FOELABpsM7C9UhXZPIq8vTubIhHVHmidK/h7r0d7T4pb84UU+Bb4rZLv1F75R/RiqyynDuCfhA/+2M6601qPsOOhccu1LqE21JPGtLtJ8Kpklc9xX85gtwL1y50ISnwSSxEyUmFn8JvcuVqfOLxY+dqeqdPVvzccTiJ77zIidvWb6uGMoQoJK8gx2BQ7e+RN0RoHUExJimsBlrD62L4HuejCqJkw80tt4/kPX2RAL/cdfmkKjzSyKvHyuyX1SOLNG/LdFnLMN+oUuDHSeHxHNuINwN8fgpv13CNOUvn9du9f/aYXB6mv3x56k5PTGDoyPz5tfTX8zJ39lfx7+fvJHff36f9/8FaFf9O9lvAAA=","debug_symbols":"ldhBasMwEIXhu2idhaQZaUa+SunCbVMIBCckbqEE370JjbtwDOFfGs+3Gr/H4EvYH977cXcYzqG7hBi6l0s4H/vh9nQe+9MYOvdN2A4foUtRp0343O23oVObXjchwfkM5wXOK5wvcL7CeYPzDucb3Rde8LMN+xJkCoQCpWB1yynnWWheioqFYeFYrG4753gXWdIybhGLhEXGQrBQLAoWFQvDwrHAO5enOy9LkbDIWAgW6zsvMou6zLkULCoWhsX6zn3OeW4PG2xUaMQiYYFzrjjninOuOOeKc64454pzrjjnBXd7wd1e8M4LznlRLAoWFQuc8+JYNCpqxALnvGYsBAvFYnXnEutdSH441SsWhoVjgXNuOOeGc24454a73XC3G+52w91uuNsNd7vhnTu+4RzfcI5vOMfd7viGc3zDOb7hHHe74xvO8Q3X8A3XcLe3TPuqCRaKBe72hru94W5vuNvb6s7l/7sSi9Pyd0zkJHGSORFOlJPCyPXhuz/t+rf99va78vbua3if/15eH8ef49+b6Rc=","file_map":{"47":{"source":"use dep::std;\n\nfn main(fighterID: Field, moves: [Field; 3], secret: Field) {\n    assert(fighterID as u32 > 0);\n    assert(fighterID as u32 < 4);\n    let mut count_special: u32 = 0;\n    for move in moves {\n        assert(move as u32 > 0);\n        assert(move as u32 < 4);\n        if move == 3 {\n            count_special += 1;\n        }\n    }\n    assert(count_special < 2);\n}\n\n#[test]\nfn test_main() {\n    let fighterID: Field = 1;\n    let moves: [Field; 3] = [1, 2, 3];\n    let secret: Field = 1;\n\n    main(fighterID, moves, secret);\n}\n\n#[test(should_fail)]\nfn test_unknown_fighter() {\n    let fighterID: Field = 5;\n    let moves: [Field; 3] = [1, 2, 3];\n    let secret: Field = 1;\n\n    main(fighterID, moves, secret);\n}\n\n#[test(should_fail)]\nfn test_invalid_moves() {\n    let fighterID: Field = 1;\n    let moves: [Field; 3] = [4, 2, 3];\n    let secret: Field = 1;\n\n    main(fighterID, moves, secret);\n}\n\n#[test(should_fail)]\nfn test_invalid_moves_special() {\n    let fighterID: Field = 1;\n    let moves: [Field; 3] = [3, 2, 3];\n    let secret: Field = 1;\n\n    main(fighterID, moves, secret);\n}\n\n// #[test(should_fail)]\n// fn test_secret_fail() {\n//     let fighterID: Field = 1;\n//     let moves: [Field; 3] = [1, 2, 3];\n//     let secret: Field = 1;\n\n//     main(fighterID, moves, secret);\n// }\n","path":"/home/arjanjohan/git/hack/scroll24/scroll-fighter/packages/noir/circuits/src/main.nr"}},"names":["main"]}