{"noir_version":"0.27.0+606ff4448571b0cfe4b92420c766c4239a4b23a0","hash":12888596777978518527,"abi":{"parameters":[{"name":"fighterID","type":{"kind":"field"},"visibility":"private"},{"name":"moves","type":{"kind":"array","length":3,"type":{"kind":"field"}},"visibility":"private"},{"name":"secret","type":{"kind":"field"},"visibility":"private"}],"param_witnesses":{"fighterID":[{"start":0,"end":1}],"moves":[{"start":1,"end":4}],"secret":[{"start":4,"end":5}]},"return_type":null,"return_witnesses":[]},"bytecode":"H4sIAAAAAAAA/+1Y7VIaQRBsRCHGL9D4hRoPRI0fqdwCB8c/HyAvAXg8dh7FCqt71LquSSrXcwXWbRW1V3D0zM7N9M10CS+rN/v8NNfl2WcFb1fJ7A9mD7MtRcQKPe5mxVbphR2LNbNXZp9P1nW63Lj54vhkvi85cX0y1+l/yuY7OPeVrOsVC++9e0rv4Gx4/Kx7vivBWQ9mD7MtlR5WB/WXdXgd0MCxWSbbtrG6Yb/XSwadRHXVKOwMx3EU9qJxP1axiuLosRN3u0nciwfD8XAQDlWvm6hpNOxMDdZadqyuwQorkCmKFXL8mGeuerDG4eQxUuP+40AloyieTIZdpTqj/qg/7sTTZBypOIpnmJNRJ56Z64wmKglH/aQMT8KCT15VHlZo+6tJpWquKx7/7fvSZ/pEzpm01tbwNn9Wrd8rli8lvi/KPq/vudY98REjKxuchVl1gsfCXQevOKXOvc5/Rl5fGYS8LoD7HTJEz3pRpn4yc+kzMYeY8UsbD+1fE//eAS/Ay37epXrcFemA065xE//fAbfg74BbeNsBt6z/vdcBt/D3DtiHszAdsA5m4NhwC5mZbFk73g2iX5uQKQJ2sW6ARzh5jdiMaWL6vIYTj7siBLNl9m0UBEMjGB3MwLHBHqmZBLMFXuFuQ6YI2ASzheUjmBLRZ4+7IgSzY/YaCg2PRjA6qLaGp4MbODbLArZTrKyEswNeIdcgUxRsDY955jqWT8Or87BeaXi7KDQ8sz6+hqcPsCuAu4fF1vD0uff4z0hEw6sZX9m4PyBD9GwNj5lLX4g5xIxf2nho/5rIT8MjvOxz1/D2zX6AYsSmdcA6mIFjg63h1bJjzTvefaJfB5ApAnax7oNHOHmN2Ixp4kW+mOam4R2a/QgFwdAIRgczcGywR2omwRyCV7hHkCkCNsEcYvkIZoXos8ddEYI5NnsDhYZHIxgdVFvD08ENHJtswrGTLyvhHINXyA3IFAVbw2Oe+QTLp+Gd8LBeaXinKDQ8sz6+hqeT6FQA9wyLreHpc5/xn5GIhtcwvrJxFWSInq3hMXPpKzGHmPFLGw/tXxP5aXiEl33uGt652QMUIzatAw4gr+E1smPNO95zol8BZIqAXazn4BFOXiM2Y5rIW8Nrml0XbEEw2dacYLRzgWODPVIzCaYJXuG2IFMEbIJpYvkIpkz02eOuCMFcmL2NQsOjEYwOqq3h6eAGjk024djJl5VwLsAr5DZkioKt4THPfInl0/AueVivNLwrFBqeWR9fw9NJdCWAe43F1vD0ua/5z0hEw2sbX9m4XcgQPVvDY+bSN2IOMeOXNh7avzw1PMLLPncN78bstyhGbFoHrIMZODbYGl47O9a8470h+nULmSJgF+sNeIST14jNmCby1vDuzH6PgmBoBKODGTg22CM1k2DuwCvce8gUAZtg7njP4rmj8Y1xaT7o31bxh/Ubj8w2MWVPAAA=","debug_symbols":"ldfNaoNAFIbhe5l1Fs7M+Rm9ldKFTVMQxIRoC0W890aKGyOEdymedxE+HoJz6K/nduquwxiaOVSheZvDeGuH9Wmc2vsUmlJO4TJ8hiZWspzCV9dfQiO+vJ9ChPcJ3md4L/Be4b3Be4f3Bd7XdC888KuFyz5INMg0EBocrhxT2gp5+tWGC8dFwcXh2rHYVtS+51bhIuIi4SLjQnChuDBcOC4KLvDm+cXmqYr7IuIi4SLj4nDzFOutyE9/FooLw4XjAm+e8eaCnQt2Lti5YOeCnQt2Lti5YOeCN5ea+lDsXLFzxc41Ux+KnSt2rti54s0Vb67YuWHnhp0bdm7YuWHnhp0bdm54cyvUh2Hnjp07du6J+nDs3LFzh84fDz/tvWs/+sv6Mbu++x7O27ft43H6vf2/Wf4A","file_map":{"47":{"source":"use dep::std;\n\nfn main(fighterID: Field, moves: [Field; 3], secret: Field) {\n    assert(fighterID as u32 > 0);\n    assert(fighterID as u32 < 100);\n    for move in moves {\n        assert(move as u32 > 0);\n        assert(move as u32 < 4);\n    }\n}\n\n#[test]\nfn test_main() {\n    let fighterID: Field = 1;\n    let moves: [Field; 3] = [1, 2, 3];\n    let secret: Field = 1;\n\n    main(fighterID, moves, secret);\n}\n\n#[test(should_fail)]\nfn test_unknown_fighter() {\n    let fighterID: Field = 1;\n    let moves: [Field; 3] = [1, 2, 3];\n    let secret: Field = 1;\n\n    main(fighterID, moves, secret);\n}\n\n#[test(should_fail)]\nfn test_invalid_moves() {\n    let fighterID: Field = 1;\n    let moves: [Field; 3] = [1, 2, 3];\n    let secret: Field = 1;\n\n    main(fighterID, moves, secret);\n}\n\n#[test(should_fail)]\nfn test_secret_fail() {\n    let fighterID: Field = 1;\n    let moves: [Field; 3] = [1, 2, 3];\n    let secret: Field = 1;\n\n    main(fighterID, moves, secret);\n}\n","path":"/home/arjanjohan/git/hack/scroll24/scroll-fighter/packages/noir/src/main.nr"}},"names":["main"]}